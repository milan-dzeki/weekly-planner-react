{"version":3,"sources":["components/Header/Header.js","components/NavList/NavList.js","components/Backdrop/Backdrop.js","containers/Layout/Layout.js","components/Form/Form.js","components/FormAlert/FormAlert.js","components/TaskBoxes/TaskBoxes.js","components/Button/Button.js","components/TaskBoxes/TaskBox/TaskBox.js","components/QuestionModal/QuestionModal.js","store/actions/actionTypes.js","hooks/useButtons.js","store/actions/tasks.js","pages/Home/Home.js","pages/Done/Done.js","pages/Failed/Failed.js","pages/Stats/Stats.js","App.js","reportWebVitals.js","store/reducers/tasks.js","index.js"],"names":["Header","showNavlist","children","className","onClick","NavList","navlistOpen","hideNavlist","to","Backdrop","show","backdropClicked","Layout","useState","setNavlistOpen","useEffect","media","window","matchMedia","adjustBackdropAndNavlistOnScreenChange","matches","addEventListener","removeEventListener","Form","nameValue","dayValue","nameValueChanged","dayValueChanged","formSubmit","submitBtnPrefix","onSubmit","htmlFor","id","name","type","value","onChange","hidden","FormAlert","formAlertShow","formAlertBcg","formAlertMsg","style","display","backgroundColor","TaskBoxes","taskboxesType","taskboxes","slideIndex","setSlideIndex","innerWidth","windowSize","setWindowSize","checkSize","prevIndex","transform","Button","additionalClass","btnType","clicked","btnDisabled","disabled","TaskBox","addedTasks","listType","taskboxDay","taskboxItems","itemBtnClicked","length","textAlign","padding","fontSize","map","item","QuestionModal","questionModalShow","questionModalType","questionModalText","actionCancelled","actionConfirmed","ADD_NEW_TASK","REMOVE_TASK","TASK_FAILED","TASK_DONE","EDIT_TASK","CLEAR_LIST","useButtons","text","action","day","itemId","questionModal","setQuestionModal","closeQuestionModal","dispatch","useDispatch","onRemoveTask","list","actionTypes","actions","onTaskDone","onTaskFailed","onEditTask","onClearList","questionModalConfirm","Home","tasks","useSelector","state","toDo","nameInput","setNameInput","dayInput","setDayInput","setSubmitBtnPrefix","editTask","msg","bcg","formAlertData","setFormAlertData","onTaskAdded","task","Object","keys","taskbox","event","target","preventDefault","trim","newTask","uuid","setTimeout","Done","done","Failed","failed","Stats","statsByDay","allTaskLists","mainLists","useMemo","tasksToBeDonePercentage","setTasksToBeDonePercentage","tasksDonePercentage","setTasksDonePercentage","tasksFailedPercentage","setTasksFailedPercentage","tasksByDayPercentages","setTasksByDayPercentages","getPercentages","allTasks","singleList","percentage","totalTasks","reduce","arr","el","concat","toDoTasks","doneTasks","failedTasks","toFixed","total","percentagesByDay","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","monday","tuesday","wednesday","thursday","friday","saturday","sunday","reducer","newList","filter","itemDone","find","filteredList","itemFailed","updatedList","itemToEdit","listWithoutEditingItem","rootReducer","combineReducers","tasksReducer","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","basename","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51b969c7.chunk.js","sourcesContent":["import React from 'react';\r\nimport './header.scss';\r\nimport { FcPlanner } from 'react-icons/fc';\r\nimport { FaBars } from 'react-icons/fa';\r\n\r\nconst Header = ({showNavlist, children}) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <section className=\"header__left\">\r\n        <article className=\"header__left-icon\">\r\n          <FcPlanner />\r\n        </article>\r\n        <article className=\"header__left-title\">\r\n          weekly planner\r\n        </article>\r\n      </section>\r\n      <section \r\n        className=\"header__right\"\r\n        onClick={showNavlist}>\r\n        <FaBars />\r\n      </section>\r\n      {children}\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport './navlist.scss';\r\nimport { FaTimes } from 'react-icons/fa';\r\nimport { GoTasklist } from 'react-icons/go';\r\nimport  { BiTask, BiTaskX } from 'react-icons/bi';\r\nimport { ImStatsBars } from 'react-icons/im';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NavList = ({navlistOpen, hideNavlist}) => {\r\n  return (\r\n    <nav className={navlistOpen ? \"navlist navlist-show\" : \"navlist\"}>\r\n      <div \r\n        className=\"navlist__close\"\r\n        onClick={hideNavlist}>\r\n        <FaTimes className=\"navlist__close-icon\"/>\r\n      </div>\r\n      <ul className=\"navlist__list\">\r\n        <li className=\"navlist__list-item\">\r\n          <Link \r\n            to=\"/\"\r\n            className=\"navlist__list-item__link\"\r\n            onClick={hideNavlist}>\r\n            <div className=\"navlist__list-item__icon\">\r\n              <GoTasklist />\r\n            </div>\r\n            <p className=\"navlist__list-item__text\">\r\n              tasks\r\n            </p>\r\n          </Link>\r\n        </li>\r\n        <li className=\"navlist__list-item\">\r\n          <Link \r\n            to=\"/done\"\r\n            className=\"navlist__list-item__link\"\r\n            onClick={hideNavlist}>\r\n            <div className=\"navlist__list-item__icon\">\r\n              <BiTask />\r\n            </div>\r\n            <p className=\"navlist__list-item__text\">\r\n              done\r\n            </p>\r\n          </Link>\r\n        </li>\r\n        <li className=\"navlist__list-item\">\r\n          <Link \r\n            to=\"/failed\"\r\n            className=\"navlist__list-item__link\"\r\n            onClick={hideNavlist}>\r\n            <div className=\"navlist__list-item__icon\">\r\n              <BiTaskX />\r\n            </div>\r\n            <p className=\"navlist__list-item__text\">\r\n              failed\r\n            </p>\r\n          </Link>\r\n        </li>\r\n        <li className=\"navlist__list-item\">\r\n          <Link \r\n            to=\"/stats\"\r\n            className=\"navlist__list-item__link\"\r\n            onClick={hideNavlist}>\r\n            <div className=\"navlist__list-item__icon\">\r\n              <ImStatsBars />\r\n            </div>\r\n            <p className=\"navlist__list-item__text\">\r\n              stats\r\n            </p>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default NavList\r\n","import React from 'react';\r\nimport './backdrop.scss';\r\n\r\nconst Backdrop = ({show, backdropClicked}) => (\r\n  <div className={show ? \"backdrop backdrop-show\" : \"backdrop\"} onClick={backdropClicked}></div>\r\n);\r\n\r\nexport default Backdrop;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Header from '../../components/Header/Header';\r\nimport NavList from '../../components/NavList/NavList';\r\nimport Backdrop from '../../components/Backdrop/Backdrop';\r\n\r\nconst Layout = ({children}) => {\r\n  const [navlistOpen, setNavlistOpen] = useState(false);\r\n  // manage backdrop and navlist with screen change\r\n  \r\n  useEffect(() => {\r\n    const media = window.matchMedia(\"(min-width: 800px)\");\r\n    const adjustBackdropAndNavlistOnScreenChange = () => {\r\n      if(media.matches) {\r\n        setNavlistOpen(false);\r\n      }\r\n    }\r\n    window.addEventListener(\"load\", adjustBackdropAndNavlistOnScreenChange);\r\n    window.addEventListener(\"resize\", adjustBackdropAndNavlistOnScreenChange);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"load\", adjustBackdropAndNavlistOnScreenChange);\r\n      window.removeEventListener(\"resize\", adjustBackdropAndNavlistOnScreenChange);\r\n    }\r\n  }, []);\r\n\r\n  //show navlist\r\n  const showNavlist = () => {\r\n    setNavlistOpen(true);\r\n  };\r\n  //hide navlist\r\n  const hideNavlist = () => {\r\n    setNavlistOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        showNavlist={showNavlist}>\r\n        <Backdrop\r\n          show={navlistOpen}\r\n          backdropClicked={hideNavlist} />\r\n        <NavList\r\n          navlistOpen={navlistOpen} \r\n          hideNavlist={hideNavlist} />\r\n      </Header>\r\n      <main>\r\n        {children}\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport './form.scss';\r\n\r\nconst Form = ({nameValue, dayValue, nameValueChanged, dayValueChanged, formSubmit, submitBtnPrefix, children}) => {\r\n  return (\r\n    <section className=\"form\">\r\n      <div className=\"form__center\">\r\n        <h3 className=\"form__title\">\r\n          set your task\r\n        </h3>\r\n        {children}\r\n        <form className=\"form__form\" onSubmit={formSubmit}>\r\n          <div className=\"form__control\">\r\n            <label\r\n              className=\"form__label\"htmlFor=\"name\">\r\n              task name:\r\n            </label>\r\n            <input\r\n              className=\"form__input\" \r\n              id=\"name\"\r\n              name=\"name\"\r\n              type=\"text\"\r\n              value={nameValue}\r\n              onChange={nameValueChanged} />\r\n          </div>\r\n          <div className=\"form__control\">\r\n            <label\r\n              htmlFor=\"day\"\r\n              className=\"form__label\">\r\n              day: \r\n            </label>\r\n            <select\r\n              className=\"form__input\" \r\n              id=\"day\"\r\n              name=\"day\"\r\n              value={dayValue || \"\"}\r\n              onChange={dayValueChanged}>\r\n              <option value=\"\" hidden ></option>\r\n              <option value=\"monday\">Monday</option>\r\n              <option value=\"tuesday\">Tuesday</option>\r\n              <option value=\"wednesday\">Wednesday</option>\r\n              <option value=\"thursday\">Thursday</option>\r\n              <option value=\"friday\">Friday</option>\r\n              <option value=\"saturday\">Saturday</option>\r\n              <option value=\"sunday\">Sunday</option>\r\n            </select>\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"form__submit\">\r\n            {submitBtnPrefix} item\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport './form-alert.scss';\r\n\r\nconst FormAlert = ({formAlertShow, formAlertBcg, formAlertMsg}) => {\r\n  return (\r\n    <div \r\n      className=\"form-alert\"\r\n      style={{\r\n        display: formAlertShow ? \"block\" : \"none\",\r\n        backgroundColor: formAlertBcg\r\n      }}>\r\n      {formAlertMsg}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormAlert;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './taskboxes.scss';\r\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa';\r\n\r\nconst TaskBoxes = ({taskboxesType, taskboxes}) => {\r\n  const [slideIndex, setSlideIndex] = useState(0);\r\n\r\n  const [windowSize, setWindowSize] = useState(window.innerWidth);\r\n\r\n  const checkSize = () => {\r\n    setWindowSize(window.innerWidth);\r\n    setSlideIndex(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", checkSize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", checkSize);\r\n    }\r\n  }, [windowSize]);\r\n\r\n  useEffect(() => {\r\n    setSlideIndex(0);\r\n  }, []);\r\n\r\n  // slide right\r\n  const slideRight = () => {\r\n    if(slideIndex < 6 && windowSize < 1000) {\r\n      setSlideIndex(prevIndex => prevIndex + 1);\r\n    }\r\n    if(slideIndex < 3 && windowSize > 1000) {\r\n      setSlideIndex(prevIndex => prevIndex + 0.5);\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n\r\n  const slideLeft = () => {\r\n    if(slideIndex > 0 && windowSize < 1000) {\r\n      setSlideIndex(prevIndex => prevIndex - 1);\r\n    }\r\n    if(slideIndex > 0 && windowSize > 1000) {\r\n      setSlideIndex(prevIndex => prevIndex - 0.5);\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n  return (\r\n    <div className={`taskboxes taskboxes__${taskboxesType}`}>\r\n      <div \r\n        className=\"taskboxes__btn taskboxes__btn--left\"\r\n        onClick={slideLeft}>\r\n        <FaChevronLeft />\r\n      </div>\r\n      <div \r\n        className=\"taskboxes__btn taskboxes__btn--right\"\r\n        onClick={slideRight}>\r\n        <FaChevronRight />\r\n      </div>\r\n      <div className=\"taskboxes__items\">\r\n        <div className=\"taskboxes__items-flex\" style={{transform: `translateX(calc(-100% * ${slideIndex}))`}}>\r\n          {taskboxes}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TaskBoxes;\r\n","import React from 'react';\r\nimport './button.scss';\r\n\r\nconst Button = ({btnType, clicked, btnDisabled}) => {\r\n  let additionalClass;\r\n  switch(btnType) {\r\n    case(\"edit\"):\r\n      additionalClass = \"btn--edit\";\r\n      break;\r\n    case(\"remove\"):\r\n      additionalClass = \"btn--remove\";\r\n      break;\r\n    case(\"done\"):\r\n      additionalClass = \"btn--done\";\r\n      break;\r\n    case(\"failed\"):\r\n      additionalClass = \"btn--failed\";\r\n      break;\r\n    case(\"clear list\"):\r\n      additionalClass = \"btn--clear\";\r\n      break;\r\n    default:\r\n      additionalClass = null;\r\n  }\r\n  return <button className={`btn ${additionalClass}`} disabled={btnDisabled} onClick={clicked}>{btnType}</button>\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport './taskbox.scss';\r\nimport Button from '../../Button/Button';\r\n\r\nconst TaskBox = ({ listType, taskboxDay, taskboxItems, itemBtnClicked}) => {\r\n  let addedTasks;\r\n  if(taskboxItems.length === 0) {\r\n    addedTasks = <p style ={{textAlign: \"center\", padding: \"2rem 0\", fontSize: \"2rem\"}}>No added tasks yet</p>\r\n  } else {\r\n    addedTasks = taskboxItems.map(item => {\r\n      return (\r\n        <li\r\n          key={item.id}\r\n          id={item.id}\r\n          className=\"taskbox__item\">\r\n          <p className=\"taskbox__item-name\">\r\n            {item.name}\r\n          </p>\r\n          <div className=\"taskbox__item-btns\">\r\n            {(listType === \"failed\" || listType === \"toDo\") && <Button btnType=\"done\" clicked={() => itemBtnClicked(\"Are you sure you have completed this task?\", \"done\", listType, taskboxDay, item.id )}/>}\r\n            {listType === \"toDo\" && (\r\n              <>\r\n                <Button \r\n                  btnType=\"failed\"\r\n                  clicked={() => itemBtnClicked(\"Are you sure you cannot accomplish this task?\", \"failed\", listType, taskboxDay, item.id )}/>\r\n                <Button btnType=\"edit\" clicked={() => itemBtnClicked(\"Are you sure waht to edit this task?\", \"edit\", listType, taskboxDay, item.id )} />\r\n              </>)}\r\n            <Button \r\n              btnType=\"remove\" \r\n              clicked={() => itemBtnClicked(\"Are you sure you want to remove this task?\", \"remove\", listType, taskboxDay, item.id )}/>\r\n          </div>\r\n        </li>\r\n      );\r\n    })\r\n  }\r\n  return (\r\n    <article className={`taskbox taskbox--${taskboxDay}`}>\r\n      <h2 className=\"taskbox__day\">\r\n        {taskboxDay}\r\n      </h2>\r\n      <ul className=\"taskbox__items\">\r\n        {addedTasks}\r\n      </ul>\r\n      <Button \r\n        btnType=\"clear list\" className=\"taskbox__clear-btn\"\r\n        btnDisabled={taskboxItems.length === 0 || false}\r\n        clicked={() => itemBtnClicked(\"Are you sure you want to delete all tasks from for this day?\", \"clear\", listType, taskboxDay, null)} />\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default TaskBox;\r\n","import React from 'react';\r\nimport './question-modal.scss';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nconst QuestionModal = ({questionModalShow, questionModalType, questionModalText, actionCancelled, actionConfirmed}) => {\r\n  return (\r\n    <>\r\n      <Backdrop show={questionModalShow}/>\r\n      <div \r\n        className={questionModalShow ? `question-modal question-modal--${questionModalType} question-modal__show` : `question-modal`}>\r\n        <h2 className=\"question-modal__title\">\r\n          watch out\r\n        </h2>\r\n        <p className=\"question-modal__text\">\r\n          {questionModalText}\r\n        </p>\r\n        <div className=\"question-modal__btns\">\r\n          <button \r\n            className=\"question-modal__btn question-modal__btn--cancel\"\r\n            onClick={actionCancelled}>\r\n            cancel\r\n          </button>\r\n          <button \r\n            className=\"question-modal__btn question-modal__btn--confirm\"\r\n            onClick={actionConfirmed}>\r\n            confirm\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default QuestionModal;\r\n","//adding task\r\nexport const ADD_NEW_TASK = \"ADD_NEW_TASK\";\r\n\r\n// removing single task (for all lists)\r\nexport const REMOVE_TASK = \"REMOVE_TASK\";\r\n\r\n// task failed\r\nexport const TASK_FAILED = \"TASK_FAILED\";\r\n\r\n// task done\r\nexport const TASK_DONE = \"TASK_DONE\";\r\n\r\n// edit task\r\nexport const EDIT_TASK = \"EDIT_TASK\";\r\n\r\n// clear list\r\nexport const CLEAR_LIST = \"CLEAR_LIST\";","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as actions from '../store/actions/index';\r\n\r\nexport const useButtons = () => {\r\n  const [questionModal, setQuestionModal] = useState({show: false, text: \"\", action: \"\", listType: \"\", day: \"\", itemId: \"\"});\r\n  \r\n  const closeQuestionModal = () => {\r\n    setQuestionModal({show: false, text: \"\", action: \"\", listType: \"\", day: \"\", itemId: \"\"})\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  // remove task\r\n  const onRemoveTask = (list, day, itemId) => dispatch(actions.removeTask(list, day, itemId));\r\n  // task done\r\n  const onTaskDone = (list, day, itemId) => dispatch(actions.taskDone(list, day, itemId));\r\n  const onTaskFailed = (list, day, itemId) => dispatch(actions.taskFailed(list, day, itemId));\r\n  const onEditTask = (list, day, itemId) => dispatch(actions.editTask(list, day, itemId));\r\n  const onClearList = (list, day) => dispatch(actions.clearList(list, day));\r\n  // item btn clicked\r\n  const itemBtnClicked = (text, action, listType, day, itemId) => {\r\n    setQuestionModal({show: true, text: text, action: action, listType: listType, day: day, itemId: itemId});\r\n  };\r\n  // question modal action confirm\r\n  const questionModalConfirm = (list, day, itemId) => {\r\n    if(questionModal.action === \"remove\") {\r\n      onRemoveTask(list, day, itemId);\r\n    }\r\n    if(questionModal.action === \"done\") {\r\n      onTaskDone(list, day, itemId);\r\n    }\r\n    if(questionModal.action === \"failed\") {\r\n      onTaskFailed(list, day, itemId);\r\n    }\r\n    if(questionModal.action === \"edit\") {\r\n      onEditTask(list, day, itemId);\r\n    }\r\n    if(questionModal.action === \"clear\") {\r\n      onClearList(list, day);\r\n    }\r\n    closeQuestionModal();\r\n  };\r\n\r\n  return {\r\n    questionModal,\r\n    closeQuestionModal,\r\n    itemBtnClicked,\r\n    questionModalConfirm\r\n  }\r\n}","import * as actionTypes from './actionTypes';\r\n\r\nexport const addNewTask = (task, day) => {\r\n  return {\r\n    type: actionTypes.ADD_NEW_TASK,\r\n    task,\r\n    day\r\n  };\r\n};\r\n\r\nexport const removeTask = (list, day, itemId) => {\r\n  return {\r\n    type: actionTypes.REMOVE_TASK,\r\n    list,\r\n    day,\r\n    itemId\r\n  };\r\n};\r\n\r\nexport const taskDone = (list, day, itemId) => {\r\n  return {\r\n    type: actionTypes.TASK_DONE,\r\n    list,\r\n    day,\r\n    itemId\r\n  };\r\n};\r\n\r\nexport const taskFailed = (list, day, itemId) => {\r\n  return {\r\n    type: actionTypes.TASK_FAILED,\r\n    list,\r\n    day,\r\n    itemId\r\n  };\r\n};\r\n\r\nexport const editTask = (list, day, itemId) => {\r\n  return {\r\n    type: actionTypes.EDIT_TASK,\r\n    list,\r\n    day,\r\n    itemId\r\n  };\r\n};\r\n\r\nexport const clearList = (list, day) => {\r\n  return {\r\n    type: actionTypes.CLEAR_LIST,\r\n    list,\r\n    day\r\n  };\r\n};\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport './home.scss';\r\nimport { v4 as uuid } from 'uuid';\r\nimport Form from '../../components/Form/Form';\r\nimport FormAlert from '../../components/FormAlert/FormAlert';\r\nimport TaskBoxes from '../../components/TaskBoxes/TaskBoxes';\r\nimport TaskBox from '../../components/TaskBoxes/TaskBox/TaskBox';\r\nimport QuestionModal from '../../components/QuestionModal/QuestionModal';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\nimport { useButtons } from '../../hooks/useButtons';\r\n\r\nconst Home = () => {\r\n  const {questionModal, closeQuestionModal, itemBtnClicked, questionModalConfirm} = useButtons();\r\n  const tasks = useSelector(state => state.tasks.toDo);\r\n  const dispatch = useDispatch();\r\n  // input values for the form to be passed as props\r\n  const [nameInput, setNameInput] = useState(\"\");\r\n  const [dayInput, setDayInput] = useState(\"\");\r\n  const [submitBtnPrefix, setSubmitBtnPrefix] = useState(\"add\");\r\n  // editing task\r\n  const editTask = useSelector(state => state.tasks.editTask);\r\n  // form alert data\r\n  const [formAlertData, setFormAlertData] = useState({show: false, msg: \"\", bcg: \"\"});\r\n  // input changed handlers to be passed as props\r\n  const nameInputChanged = (event) => {\r\n    setNameInput(event.target.value);\r\n  };\r\n  const dayInputChanged = (event) => {\r\n    setDayInput(event.target.value);\r\n  };\r\n  // add new task action\r\n  const onTaskAdded = (task, day) => dispatch(actions.addNewTask(task, day));\r\n  // submit form\r\n  const formSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    if(nameInput.trim() === \"\" || dayInput === \"\") {\r\n      setFormAlertData({show: true, msg: \"enter valid values in order to add task\", bcg: \"red\"});\r\n    } else {\r\n      if(!editTask) {\r\n        setFormAlertData({show: true, msg: \"new task added\", bcg: \"green\"});\r\n      } else {\r\n        setFormAlertData({show: true, msg: \"task edited\", bcg: \"green\"});\r\n      }\r\n\r\n      const newTask = {\r\n        id: uuid(),\r\n        name: nameInput\r\n      };\r\n      onTaskAdded(newTask, dayInput);\r\n      setNameInput(\"\");\r\n      setDayInput(\"\");\r\n      setSubmitBtnPrefix(\"add\");\r\n    }\r\n    setTimeout(() => {\r\n      setFormAlertData({show: false, msg: \"\", bcg: \"\"});\r\n    }, 1500);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(editTask) {\r\n      setNameInput(editTask.name);\r\n      setDayInput(editTask.day);\r\n      setSubmitBtnPrefix(\"edit\");\r\n    } \r\n  }, [editTask]);\r\n\r\n  let taskboxes = Object.keys(tasks).map(taskbox => {\r\n    return (\r\n      <TaskBox\r\n        key={taskbox}\r\n        listType=\"toDo\" \r\n        taskboxDay={taskbox}\r\n        taskboxItems={tasks[taskbox]}\r\n        itemBtnClicked={itemBtnClicked} />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <QuestionModal\r\n        questionModalShow={questionModal.show}\r\n        questionModalType={questionModal.action}\r\n        questionModalText={questionModal.text}\r\n        actionCancelled={closeQuestionModal}\r\n        actionConfirmed={() => \r\n          questionModalConfirm(questionModal.listType, questionModal.day, questionModal.itemId)  \r\n        } />\r\n      <Form\r\n        nameValue={nameInput}\r\n        nameValueChanged={nameInputChanged}\r\n        submitBtnPrefix={submitBtnPrefix}\r\n        dayValue={dayInput}\r\n        dayValueChanged={dayInputChanged}\r\n        formSubmit={formSubmitHandler}>\r\n        <FormAlert \r\n          formAlertShow={formAlertData.show}\r\n          formAlertMsg={formAlertData.msg}\r\n          formAlertBcg={formAlertData.bcg}/>\r\n      </Form>\r\n      <section className=\"home__tasks\">\r\n        <h2 className=\"home__tasks-title\">\r\n          things to do this week\r\n        </h2>\r\n        <div className=\"home__tasks-boxes\">\r\n          <TaskBoxes\r\n            taskboxesType=\"toDo\" \r\n            taskboxes={taskboxes} />\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport './done.scss';\r\nimport TaskBoxes from '../../components/TaskBoxes/TaskBoxes';\r\nimport TaskBox from '../../components/TaskBoxes/TaskBox/TaskBox';\r\nimport QuestionModal from '../../components/QuestionModal/QuestionModal';\r\nimport { MdDone } from 'react-icons/md';\r\nimport { useSelector } from 'react-redux';\r\nimport { useButtons } from '../../hooks/useButtons';\r\n\r\nconst Done = () => {\r\n  const {questionModal, closeQuestionModal, itemBtnClicked, questionModalConfirm} = useButtons();\r\n  const tasks = useSelector(state => state.tasks.done);\r\n\r\n  let taskboxes = Object.keys(tasks).map(taskbox => {\r\n    return (\r\n      <TaskBox\r\n        key={taskbox} \r\n        taskboxDay={taskbox}\r\n        listType=\"done\"\r\n        taskboxItems={tasks[taskbox]}\r\n        itemBtnClicked={itemBtnClicked} />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <QuestionModal\r\n        questionModalShow={questionModal.show}\r\n        questionModalType={questionModal.action}\r\n        questionModalText={questionModal.text}\r\n        actionCancelled={closeQuestionModal}\r\n        actionConfirmed={() => \r\n          questionModalConfirm(questionModal.listType, questionModal.day, questionModal.itemId)  \r\n        } />\r\n      <section className=\"done\">\r\n        <div className=\"done__title\">\r\n          <MdDone className=\"done__title-icon\"/>\r\n          <h2 className=\"done__title-text\">\r\n            accomplished tasks\r\n          </h2>\r\n        </div>\r\n        <div className=\"done__taskboxes\">\r\n          <TaskBoxes\r\n            taskboxesType=\"done\"\r\n            taskboxes={taskboxes} />\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Done;\r\n","import React from 'react';\r\nimport './failed.scss';\r\nimport TaskBoxes from '../../components/TaskBoxes/TaskBoxes';\r\nimport TaskBox from '../../components/TaskBoxes/TaskBox/TaskBox';\r\nimport QuestionModal from '../../components/QuestionModal/QuestionModal';\r\nimport { CgDanger } from 'react-icons/cg';\r\nimport { useSelector } from 'react-redux';\r\nimport { useButtons } from '../../hooks/useButtons';\r\n\r\nconst Failed = () => {\r\n  const {questionModal, closeQuestionModal, itemBtnClicked, questionModalConfirm} = useButtons();\r\n  const tasks = useSelector(state => state.tasks.failed);\r\n\r\n  let taskboxes = Object.keys(tasks).map(taskbox => {\r\n    return (\r\n      <TaskBox\r\n        key={taskbox} \r\n        taskboxDay={taskbox}\r\n        listType=\"failed\"\r\n        taskboxItems={tasks[taskbox]}\r\n        itemBtnClicked={itemBtnClicked} />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <QuestionModal\r\n        questionModalShow={questionModal.show}\r\n        questionModalType={questionModal.action}\r\n        questionModalText={questionModal.text}\r\n        actionCancelled={closeQuestionModal}\r\n        actionConfirmed={() => \r\n          questionModalConfirm(questionModal.listType, questionModal.day, questionModal.itemId)  \r\n        } />\r\n      <section className=\"failed\">\r\n        <div className=\"failed__title\">\r\n          <CgDanger className=\"failed__title-icon\"/>\r\n          <h2 className=\"failed__title-text\">\r\n            failed tasks\r\n          </h2>\r\n        </div>\r\n        <div className=\"failed__taskboxes\">\r\n          <TaskBoxes\r\n            taskboxesType=\"failed\"\r\n            taskboxes={taskboxes} />\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Failed;","import React, { useState, useEffect, useMemo } from 'react';\r\nimport './stats.scss';\r\nimport { ImStatsDots } from 'react-icons/im';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Stats = () => {\r\n  const allTaskLists = useSelector(state => state.tasks);\r\n  const mainLists = useMemo(() => {\r\n    return {\r\n      toDo: allTaskLists.toDo,\r\n      done: allTaskLists.done, \r\n      failed: allTaskLists.failed\r\n    }\r\n  }, [allTaskLists]);\r\n  // put percentages for each list in the state\r\n  const [tasksToBeDonePercentage, setTasksToBeDonePercentage] = useState(null);\r\n  const [tasksDonePercentage, setTasksDonePercentage] = useState(null);\r\n  const [tasksFailedPercentage, setTasksFailedPercentage] = useState(null);\r\n  // custom list with each day containing three arrays (toDo, done, failed)\r\n  const [tasksByDayPercentages, setTasksByDayPercentages] = useState({});\r\n\r\n  // percentage calculator\r\n  const getPercentages = (allTasks, singleList) => {\r\n    let percentage = (singleList / allTasks) * 100;\r\n    if(allTasks === 0) {\r\n      percentage = 0;\r\n    }\r\n    return percentage;\r\n  }\r\n  // set percentages with every state change\r\n  useEffect(() => {\r\n    // get one array that contains ALL tasks\r\n    let arrayWithAllTasks = Object.keys(mainLists).map(list => Object.keys(mainLists[list]).map(day => mainLists[list][day]).reduce((arr, el) => {\r\n      return arr.concat(el)\r\n    }, [])).reduce((arr, el) => {\r\n      return arr.concat(el)\r\n    }, []);\r\n\r\n    // get number of ALL tasks\r\n    let totalTasks = arrayWithAllTasks.length;\r\n\r\n    // num of to do tasks\r\n    let toDoTasks = Object.keys(mainLists.toDo).map(day => {\r\n      return mainLists.toDo[day]\r\n    }).reduce((arr, el) => {\r\n      return arr.concat(el);\r\n    }, []).length; \r\n\r\n    // num of accomplished tasks\r\n    let doneTasks = Object.keys(mainLists.done).map(day => {\r\n      return mainLists.done[day]\r\n    }).reduce((arr, el) => {\r\n      return arr.concat(el);\r\n    }, []).length;\r\n    \r\n    // num of failed tasks\r\n    let failedTasks = Object.keys(mainLists.failed).map(day => {\r\n      return mainLists.failed[day]\r\n    }).reduce((arr, el) => {\r\n      return arr.concat(el);\r\n    }, []).length;\r\n    \r\n    // set percentages\r\n    setTasksToBeDonePercentage(getPercentages(totalTasks, toDoTasks).toFixed(2));\r\n    setTasksDonePercentage(getPercentages(totalTasks, doneTasks).toFixed(2));\r\n    setTasksFailedPercentage(getPercentages(totalTasks, failedTasks).toFixed(2));\r\n  }, [mainLists]);\r\n\r\n  // set percentages for each single day\r\n  useEffect(() => {\r\n    // get list with all tasks by day\r\n    let list = {};\r\n    for(const day in mainLists.toDo) {\r\n      list[day] = {\r\n        toDo: [...mainLists.toDo[day]].length,\r\n        done: [...mainLists.done[day]].length,\r\n        failed: [...mainLists.failed[day]].length,\r\n        total: [...mainLists.toDo[day]].length + [...mainLists.done[day]].length + [...mainLists.failed[day]].length\r\n      }\r\n    }\r\n    // get percentages for each day\r\n    let percentagesByDay = {};\r\n    for(const day in list) {\r\n      percentagesByDay[day] = {\r\n        toDo: getPercentages(list[day].total, list[day].toDo).toFixed(2),\r\n        done: getPercentages(list[day].total, list[day].done).toFixed(2),\r\n        failed: getPercentages(list[day].total, list[day].failed).toFixed(2)\r\n      }\r\n    }\r\n    setTasksByDayPercentages(percentagesByDay);\r\n  }, [mainLists]);\r\n\r\n  let statsByDay;\r\n  if(Object.keys(tasksByDayPercentages).length === 0) {\r\n    statsByDay = <div>loading</div>;\r\n  } else {\r\n    statsByDay = Object.keys(mainLists.toDo).map(day => {\r\n      return (\r\n        <div key={day} className={`stats__stats-day stats__stats-day--${day}`}>\r\n          <h4 className=\"stats__stats-day__title\">\r\n            {day}\r\n          </h4>\r\n          <div className=\"stats__stats-day__box\">\r\n            <p className=\"toDo\">tasks to be done: {tasksByDayPercentages[day].toDo}%</p>\r\n            <p className=\"done\">tasks you accomlished: {tasksByDayPercentages[day].done}%</p>\r\n            <p className=\"failed\">tasks you failed to do: {tasksByDayPercentages[day].failed}%</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    })\r\n  }\r\n  return (\r\n    <section className=\"stats\">\r\n      <div className=\"stats__title\">\r\n        <ImStatsDots  className=\"stats__title-icon\"/>\r\n        <h2 className=\"stats__title-text\">\r\n          statistics\r\n        </h2>\r\n      </div>\r\n      <article className=\"stats__stats\">\r\n        <div className=\"stats__stats-all\">\r\n          <h3 className=\"stats__stats-title\">\r\n            all tasks statistics\r\n          </h3>\r\n          <div className=\"stats__stats-box\">\r\n            <p className=\"stats__stats-box__toDo\">tasks to be done: {tasksToBeDonePercentage}%</p>\r\n            <p className=\"stats__stats-box__done\">tasks you accomlished: {tasksDonePercentage}%</p>\r\n            <p className=\"stats__stats-box__failed\">tasks you failed to do: {tasksFailedPercentage}%</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"stats__stats-byday\">\r\n          <h3 className=\"stats__stats-title\">\r\n            statistics by day\r\n          </h3>\r\n          <div className=\"stats__stats-byday__content\">\r\n            {statsByDay}\r\n          </div>\r\n        </div>\r\n      </article>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Stats;\r\n","import React from 'react';\nimport Layout from './containers/Layout/Layout';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home/Home';\nimport Done from './pages/Done/Done';\nimport Failed from './pages/Failed/Failed';\nimport Stats from './pages/Stats/Stats';\n\nconst App = () => {\n  return (\n    <Layout>\n      <Switch>\n        <Route\n          path=\"/\"\n          exact\n          component={Home} />\n        <Route\n          path=\"/done\"\n          exact\n          component={Done} />\n        <Route\n          path=\"/failed\"\n          exact\n          component={Failed} />\n        <Route\n          path=\"/stats\"\n          exact\n          component={Stats} />\n      </Switch>\n    </Layout>\n  )\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  toDo: {\r\n    monday: [],\r\n    tuesday: [],\r\n    wednesday: [],\r\n    thursday: [],\r\n    friday: [],\r\n    saturday: [],\r\n    sunday: []\r\n  },\r\n  done: {\r\n    monday: [],\r\n    tuesday: [],\r\n    wednesday: [],\r\n    thursday: [],\r\n    friday: [],\r\n    saturday: [],\r\n    sunday: []\r\n  },\r\n  failed: {\r\n    monday: [],\r\n    tuesday: [],\r\n    wednesday: [],\r\n    thursday: [],\r\n    friday: [],\r\n    saturday: [],\r\n    sunday: []\r\n  },\r\n  editTask: null\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case(actionTypes.ADD_NEW_TASK):\r\n      return {\r\n        ...state,\r\n        toDo: {\r\n          ...state.toDo,\r\n          [action.day]: [\r\n            ...state.toDo[action.day],\r\n            action.task\r\n          ],\r\n        },\r\n        editTask: null\r\n      };\r\n    case(actionTypes.REMOVE_TASK):\r\n      const newList = state[action.list][action.day].filter(item => item.id !== action.itemId);\r\n\r\n      return {\r\n        ...state,\r\n        [action.list]: {\r\n          ...state[action.list],\r\n          [action.day]: newList\r\n        }\r\n      };\r\n    case(actionTypes.TASK_DONE):\r\n      const itemDone = state[action.list][action.day].find(item => item.id === action.itemId);\r\n      const filteredList = state[action.list][action.day].filter(item => item.id !== action.itemId);\r\n      \r\n      return {\r\n        ...state,\r\n        [action.list]: {\r\n          ...state[action.list],\r\n          [action.day]: filteredList\r\n        },\r\n        done: {\r\n          ...state.done,\r\n          [action.day]: state.done[action.day].concat(itemDone)\r\n        }\r\n      };\r\n    case(actionTypes.TASK_FAILED):\r\n      const itemFailed = state[action.list][action.day].find(item => item.id === action.itemId);\r\n      const updatedList = state[action.list][action.day].filter(item => item.id !== action.itemId);\r\n      return {\r\n        ...state,\r\n        [action.list]: {\r\n          ...state[action.list],\r\n          [action.day]: updatedList\r\n        },\r\n        failed: {\r\n          ...state.failed,\r\n          [action.day]: state.failed[action.day].concat(itemFailed)\r\n        }\r\n      };\r\n    case(actionTypes.EDIT_TASK):\r\n      const itemToEdit = state[action.list][action.day].find(item => item.id === action.itemId);\r\n      itemToEdit.day = action.day;\r\n      const listWithoutEditingItem = state[action.list][action.day].filter(item => item.id !== action.itemId);\r\n\r\n      return {\r\n        ...state,\r\n        [action.list]: {\r\n          ...state[action.list],\r\n          [action.day]: listWithoutEditingItem\r\n        },\r\n        editTask: itemToEdit\r\n      };\r\n    case(actionTypes.CLEAR_LIST):\r\n      return {\r\n        ...state,\r\n        [action.list]: {\r\n          ...state[action.list],\r\n          [action.day]: []\r\n        }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { createStore, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport tasksReducer from './store/reducers/tasks';\n\nconst rootReducer = combineReducers({\n  tasks: tasksReducer\n})\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router basename=\"/weekly-planner/\">\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}